pipeline {
  agent any
  tools {
      jdk 'jdk11'
      maven 'maven3'
  }
    
  environment {
        SCANNER_HOME = tool 'sonar-scanner'
        PATH = "/usr/bin:$PATH"
        
  }  
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/kamleshmjain/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "kjain1/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-hub')
      }
      steps {
        script {
                    withDockerRegistry(credentialsId: 'c90d5ed9-32b3-4562-ba1e-5410558e0555') {
                       sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
                      // sh "docker tag cicddevops ${DOCKER_IMAGE}"
                       sh "docker push ${DOCKER_IMAGE}"                        
                    }            
            /*sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }*/
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "kamleshmjain"
        }
        steps {
            withCredentials([string(credentialsId: 'Github-token', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "kjdevops1@gmail.com"
                    git config user.name "Kamlesh Jain"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
